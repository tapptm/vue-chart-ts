{"remainingRequest":"/home/ubuntu18/Desktop/Project/chart-ts/node_modules/babel-loader/lib/index.js!/home/ubuntu18/Desktop/Project/chart-ts/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ubuntu18/Desktop/Project/chart-ts/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu18/Desktop/Project/chart-ts/src/components/LineChartContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ubuntu18/Desktop/Project/chart-ts/src/components/LineChartContainer.vue","mtime":1578381607879},{"path":"/home/ubuntu18/Desktop/Project/chart-ts/node_modules/cache-loader/dist/cjs.js","mtime":1572867949209},{"path":"/home/ubuntu18/Desktop/Project/chart-ts/node_modules/babel-loader/lib/index.js","mtime":1572867946562},{"path":"/home/ubuntu18/Desktop/Project/chart-ts/node_modules/cache-loader/dist/cjs.js","mtime":1572867949209},{"path":"/home/ubuntu18/Desktop/Project/chart-ts/node_modules/vue-loader/lib/index.js","mtime":1572867949827}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["LineChartContainer.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app\">\n    <form @submit.prevent=\"addData\">\n      <input v-model=\"receipt\" required placeholder=\"Incomes\" />\n      <input v-model=\"expense\" required placeholder=\"Expenses\" />\n      <button small type=\"submit\">Adddata</button>\n    </form>\n    <form @submit.prevent=\"update\">\n      <datepicker placeholder=\"Select Date\" v-model=\"starts\"></datepicker>\n      {{starts}}\n      <datepicker placeholder=\"Select Date\" v-model=\"ends\"></datepicker>\n      {{ends}}\n      <button small type=\"submit\">update</button>\n    </form>\n    <line-chart ref=\"lineChart\" :chart-data=\"chartData\" :options=\"options\" />\n    <button small @click=\"addDataRandoms()\">addData</button>\n    <button small @click=\"randomizeData()\">randomsData</button>\n    <button small @click=\"removeData()\">removeData</button>\n  </div>\n</template>\n\n<script>\nimport { Component, Vue } from \"vue-property-decorator\";\nimport LineChart from \"@/components/LineChart.vue\";\nimport {\n  chartData,\n  options,\n  newDate,\n  startDate,\n  endDate\n} from \"../database/lineData\";\nimport Datepicker from \"vue-moment-datepicker\";\nimport { start, end, timeFormat } from \"../utils/dateFormat\";\nimport moment from \"moment\";\nimport { __asyncDelegator } from \"tslib\";\n\n@Component({\n  components: { LineChart, Datepicker }\n})\nexport default class ChartContainer extends Vue {\n  chartData = chartData;\n\n  starts = '01/07/2020';\n\n  ends = '01/';\n  \n  type = \"linear\";\n\n  options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    title: {\n      display: true,\n      text: \"new - \" + this.type\n    },\n    tooltips: {\n      mode: \"index\",\n      intersect: false,\n    },\n    scales: {\n      xAxes: [\n        {\n          type: \"time\",\n          time: {\n            parser: timeFormat,\n            tooltipFormat: \"ll HH:mm\",\n            unit: \"day\"\n          },\n          display: true,\n          scaleLabel: {\n            display: true,\n            labelString: \"Date\"\n          },\n          ticks: {\n            display: true,\n            maxRotation: 90,\n            max: moment(this.ends).format(timeFormat),\n            min: moment(this.starts).format(timeFormat)\n          }\n        }\n      ],\n      yAxes: [\n        {\n          display: true,\n          scaleLabel: {\n            display: true,\n            labelString: \"Costs\"\n          }\n        }\n      ]\n    },\n    layout: {\n      padding: {\n        left: 20\n      }\n    }\n  };\n\n\n  receipt = null;\n\n  expense = null;\n\n  getRandomInt() {\n    return Math.floor(Math.random() * (4000 - 2000 + 1500)) + 200;\n  }\n\n  randomizeData() {\n    chartData.datasets.forEach(datasets => {\n      // console.log({ rand: datasets.data });\n      const dataset = datasets;\n      dataset.data = datasets.data.map(() => this.getRandomInt());\n    });\n    return this.$refs.lineChart.update();\n  }\n\n  update() {\n    this.type = this.type === \"linear\" ? \"logarithmic\" : \"linear\";\n    this.options.title.text = \"Chart.js Line Chart - \" + this.type;\n\n    console.log(\n      (this.options.title.text = \"Chart.js Line Chart - \" + this.type)\n    );\n\n    this.options.scales.xAxes[0].ticks.min = moment(this.starts).format(\n      timeFormat\n    );\n    this.options.scales.xAxes[0].ticks.max = moment(this.ends).format(\n      timeFormat\n    );\n    \n    console.log(this.options.scales.xAxes[0].ticks.min);\n    console.log(this.options.scales.xAxes[0].ticks.max);\n\n    this.$refs.lineChart.update();\n  }\n\n  addData() {\n    if (chartData.datasets.length >= 0) {\n      chartData.labels.push(newDate(chartData.labels.length));\n      chartData.datasets[0].data.push(this.receipt);\n      chartData.datasets[1].data.push(this.expense);\n      this.receipt = \"\";\n      this.expense = \"\";\n      // console.log({ add: lineData.labels });\n    }\n    return this.$refs.lineChart.update();\n  }\n\n  addDataRandoms() {\n    if (chartData.datasets.length >= 0) {\n      chartData.labels.push(newDate(chartData.labels.length));\n      for (let index = 0; index < chartData.datasets.length; index += 1) {\n        chartData.datasets[index].data.push(this.getRandomInt());\n        // console.log({ addr: lineData.labels });\n      }\n    }\n    return this.$refs.lineChart.update();\n  }\n\n  removeData() {\n    chartData.labels.splice(-1, 1);\n    chartData.datasets.forEach(datasets => {\n      datasets.data.pop();\n      // console.log({ rem: datasets.data });\n    });\n    return this.$refs.lineChart.update();\n  }\n}\n</script>\n"],"sourceRoot":"src/components"}]}